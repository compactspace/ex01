<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.login.dao.LoginDao">
   
   <!-- 사용자 로그인 체크 -->
   <select id="checkLogin" resultType="String">
      /*kr.happy.study.login.dao.LoginDao.checkLogin*/
            SELECT  user_type
              FROM  tb_userinfo 
             WHERE  login_id = #{lgn_Id}
               AND  password = #{pwd}
     </select>
     
   
   <!-- 사용자 로그인 -->
   <select id="selectLogin" resultType="kr.happyjob.study.login.model.LgnInfoModel">
      /*kr.happy.study.login.dao.LoginDao.selectLogin*/
      SELECT  login_id as lgn_id
               , name as usr_nm
               , user_type as mem_author
      FROM tb_userinfo 
     WHERE login_id = #{lgn_Id}
        AND password = #{pwd}
        AND status_yn = 1
     </select>
     
        <!-- 사용자 로그인 -->
   <select id="selectPw" resultType="string">
      /*kr.happy.study.login.dao.LoginDao.selectLogin*/
      SELECT  password
      FROM tb_userinfo 
     WHERE login_id = #{lgn_Id}
        AND status_yn = 1
     </select>
     
        <!-- 사용자 로그인 -->
   <select id="selectLoginInfo" resultType="kr.happyjob.study.login.model.LgnInfoModel">
      /*kr.happy.study.login.dao.LoginDao.selectLogin*/
      SELECT  login_id as lgn_id
               , name as usr_nm
               , user_type as mem_author
               , user_idx
      FROM tb_userinfo 
     WHERE login_id = #{lgn_Id}
        AND status_yn = 1
     </select>
     
     
<!-- 사용자 메뉴 권한 -->
   <select id="listUsrMnuAtrt" resultType="kr.happyjob.study.login.model.UsrMnuAtrtModel">
         /*kr.happy.study.login.dao.LoginDao.listUsrMnuAtrt*/
            SELECT  ta.mnu_id
                  ,   ta.hir_mnu_id
                  ,   ta.mnu_nm
                  ,   ta.mnu_url
                  ,   ta.mnu_dvs_cod
                  ,   ta.grp_num
                  ,   ta.odr
                  ,   ta.lvl
                  ,   ta.mnu_ico_cod
<!--                   ,   ta.use_poa
                  ,   ta.dlt_poa -->
               FROM  tb_mnu_mst ta
               WHERE 
                     ta.MNU_DVS_COD = #{userType}
                  	 AND ta.lvl=0
               ORDER BY ta.odr
     </select>
     
     <!-- 사용자 자식 메뉴 권한 -->
   <select id="listUsrChildMnuAtrt" resultType="kr.happyjob.study.login.model.UsrMnuChildAtrtModel">
      /*kr.happy.study.login.dao.LoginDao.listUsrChildMnuAtrt*/
         SELECT  ta.mnu_id
               ,   ta.hir_mnu_id
               ,   ta.mnu_nm
               ,   ta.mnu_url
               ,   ta.mnu_dvs_cod
               ,   ta.grp_num
               ,   ta.odr
               ,   ta.lvl
               ,   ta.use_poa
               ,   ta.dlt_poa
         FROM  tb_mnu_mst ta
         WHERE  
          		ta.MNU_DVS_COD = #{userType}
            AND ta.lvl=1
            AND hir_mnu_id = #{hir_mnu_id}
         ORDER BY ta.odr
     </select>
     
     <!-- 회원가입 -->
     <insert id="registerUser">
     	<selectKey resultType="int" keyProperty="seq" order="BEFORE">
			SELECT IFNULL(max(user_idx), 0) + 1 FROM tb_userinfo
		</selectKey>
     	INSERT INTO tb_userinfo (
	     						  user_idx
	     						, login_id
								, user_type
	     						, name
	     						, password
	     						, sex
	                			, phone
	                			, email
	     						, regdate
	     						, birthday
	     						, status_yn
								, zip_code
	                			, address
	                			, detail_address
     						) 
     						VALUES 
                			(
     							  #{seq}
								, #{loginId}
								, #{userType}
								, #{name}  
								, #{password} 
								, #{sex} 
								, #{phone}
								, #{email}
								, CURRENT_DATE
								, #{birthday}
								, '1'
								, #{zipCode}  
								, #{address}
								, #{detailAddress}
     						)
     </insert>
     
     <!-- 중복 검사  loginID 중복검사 -->
	<select id="check_loginId" parameterType="String" resultType="int">
		SELECT count(*)
		FROM tb_userinfo
		WHERE login_id = #{loginId}
	</select>
	
	
	<!-- 회원가입 이메일 중복 검사  -->
	<select id="check_email" parameterType="String" resultType="int">
		SELECT count(*)
		FROM tb_userinfo
		WHERE email = #{user_email}
	</select>
	
     <!-- 사용자 ID count 찾기 -->
      <select id="selectFindId" resultType="String">
      /*kr.happyjob.study.login.dao.LoginDao.selectFindId*/
      SELECT  login_id as loginId
      FROM    tb_userinfo
      WHERE   name = #{name}
      AND	  email = #{email}
     </select>

     <!-- 사용자 ID count 찾기 -->
      <select id="selectFindIdCnt" resultType="int">
      /*kr.happyjob.study.login.dao.LoginDao.selectFindIdCnt*/
      SELECT  count(*)
      FROM    tb_userinfo
      WHERE   name = #{name}
      AND	  email = #{email}
     </select>

      
     <!-- 사용자 PW 찾기 -->
     <select id="selectFindPw_as" resultType="kr.happyjob.study.login.model.UserInfoModel">
      /*kr.happyjob.study.login.dao.LoginDao.selectFindPw*/
      SELECT  u.login_id as loginId
      	  ,   u.password as password
      	  ,	  u.email as email
      FROM    tb_userinfo as u
      WHERE   u.del_cd ="n"
      AND	  u.email = #{email}
      AND 	  u.login_id = #{id}
     </select>
     
      <select id="selectFindPw" resultType="kr.happyjob.study.login.model.UserInfoModel">
      /*kr.happyjob.study.login.dao.LoginDao.selectFindPw*/
      SELECT  u.login_id as loginId
      	  ,   u.password as password
      	  ,	  u.email as email
      FROM    tb_userinfo as u
      WHERE   u.email = #{email}
      AND 	  u.login_id = #{id}
      </select>
     
     
     <!-- 사용자 ID count 찾기 -->
      <select id="selectFindPwCnt" resultType="int">
      /*kr.happyjob.study.login.dao.LoginDao.selectFindPwCnt*/
      SELECT  count(*)
      FROM    tb_userinfo
      WHERE   login_id = #{id}
      AND	  email = #{email}
     </select>

     
     <!-- 사용자 PW 찾기 ID 체크-->
     <select id="registerIdCheck" resultType="kr.happyjob.study.login.model.UserInfoModel">
     SELECT     u.login_id as loginId
     FROM    	tb_userinfo as u
     WHERE   	u.del_cd ="n"
     AND 	  	u.login_id = #{id}
     </select> 
     
     <!-- 사용자 비밀번호 바꿔주기 --> 
     <update id="updatePw">
     UPDATE tb_userinfo
     SET 	password = #{pw}
     WHERE  login_id = #{id}
     </update>
     
     <!-- 이력서 파일 업로드 -->
     <insert id="insertUserinfoFile">
	     insert into tb_userinfoFile (
			  uf_title,uf_contents,uf_cnt,file_nm,file_loc,file_size,enr_user,enr_date,upd_user,upd_date
			)select
			  ,#{uf_title}  <!-- qna_title - IN varchar(50) -->
			  ,#{uf_contents}   <!-- qna_contents - IN varchar(50)-->
			  ,0    <!-- qna_cnt - IN int(11) -->
			  ,#{fileInfo.file_nm}   <!-- file_nm - IN varchar(50) -->
			  ,#{fileInfo.file_loc}  <!--  file_loc - IN varchar(50) -->
			  ,#{fileInfo.file_size}   <!-- file_size - IN varchar(50) -->
			  ,#{enr_user}   <!-- enr_user - IN varchar(20) -->
			  ,DATE_FORMAT(NOW(),'%Y-%c-%d %T' )  <!--  enr_date - IN date -->
			  ,#{upd_user}   <!-- upd_user - IN varchar(20) -->
			  ,DATE_FORMAT(NOW(),'%Y-%c-%d %T' )   <!--  upd_date - IN date -->
			from tb_userinfoFile
	</insert>
	
	<select id="getDirectory" resultType="String">
		select concat('F', date_format(now(),'%y%m%d')) AS dirPath
	</select>
	
	<update id="updateUserinfoFile">
		update tb_userinfoFile SET
		   qna_title = #{qna_title} <!-- varchar(50) -->
		  ,qna_contents =  concat(DATE_FORMAT(NOW(),'%Y-%c-%d %T' ),'- 수정됨 \n',#{qna_contents}) <!-- varchar(50) -->
		  ,file_nm = #{file_nm} <!-- varchar(50) -->
		  ,file_loc = #{file_loc}  <!--  varchar(50) -->
		  ,file_size = #{file_size}  <!-- varchar(50) -->
		  ,upd_user = #{loginID} <!-- varchar(20) -->
		  ,upd_date = DATE_FORMAT(NOW(),'%Y-%c-%d %T' )  <!-- date -->
		WHERE qna_seq = #{qna_seq} <!--  varchar(20) -->
	
	</update>

</mapper>